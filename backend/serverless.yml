# Serverless ALL
plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-openapi-documentation
  # - serverless-plugin-tracing
  - serverless-api-gateway-caching
  - serverless-prune-plugin
  # - serverless-domain-manager

service: maxresults

provider:
  name: aws
  region: us-east-1
  runtime: nodejs10.x
  stage: ${self:custom.stage}
  # vpc: ${file(./serverless.env.yml):${self:custom.stage}.VPC}
  # tracing: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"
  environment:
    CUSTOM_DOMAIN: ${file(./serverless.env.yml):${self:custom.stage}.CUSTOM_DOMAIN}

custom:
  stage: ${opt:stage, 'dev'}
  prune:
    automatic: true
    number: 2
  apiGatewayCaching:
    enabled: false
    ttlInSeconds: 60
  customDomain:
    domainName: ${file(./serverless.env.yml):${self:custom.stage}.CUSTOM_DOMAIN}
    stage: ${self:custom.stage}
    basePath: ""
    certificateName: '*.maxmilhas.com.br'
    createRoute53Record: true
    endpointType: 'regional'
    securityPolicy: tls_1_2

functions:
  contract:
    handler: src/endpoints.contract
    events:
      - http:
          path: /contract/{id}
          method: GET
          cors: true
          # caching:
          #   enabled: true
          #   cacheKeyParameters:
          #     - name: request.querystring.cachetick
          # authorizer:
          #   arn: ${file(./serverless.env.yml):${self:custom.stage}.AUTHORIZATION_SERVICE_SOL}